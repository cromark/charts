---
{{- if .Values.rollout -}}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  namespace: {{ include "ns" . }}
  name: {{ .Release.Name }}
  {{- if or .Values.metaDataLabels .Values.feature }}
  labels:
  {{- if .Values.feature }}
    feature: {{ .Values.feature | replace "/" "-" | trunc 63 | trimSuffix "-" }}
  {{- end }}  
  {{- range $key, $value := .Values.metaDataLabels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  annotations:
    author: "health-cloud"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Release.Name }}
  {{- range $key, $value := .Values.metadataAnnotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
spec:
  {{- if .Values.minReadySeconds }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  {{- end }}
  {{- if .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  {{- if .Values.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  {{- end }}
  strategy:
    rollingUpdate:
      {{- if .Values.strategy.rollingUpdate.maxUnavailable }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default "25%" }}
      {{- end }}
      {{- if .Values.strategy.rollingUpdate.maxSurge }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge | default "25%" }}
      {{- end }}
    type: RollingUpdate
  {{- if .Values.replicas }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      {{- if .Values.feature }}
        feature: {{ .Values.feature | replace "/" "-" | trunc 63 | trimSuffix "-" }}
      {{- end }}  
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
        version: {{ .Values.version | default "v1" }}
    {{- if .Values.specTemplateLabels }}
    {{- range $key, $value := .Values.specTemplateLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    {{- end }}
      annotations:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
      {{- if .Values.istio }}  
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
      {{- end }}   
      {{- if .Values.mesh }}
        linkerd.io/inject: enabled
      {{- end }}
      {{- range $key, $value := .Values.specTemplateMetadataAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    {{- if .Values.secrets }}
        vault.security.banzaicloud.io/vault-addr: {{ .Values.vaultURL | default "https://vault.mgmt.hci.aetna.com" }}
        vault.security.banzaicloud.io/vault-skip-verify: "true"
        vault.security.banzaicloud.io/vault-path: k8s/eks-{{ .Values.envname }}/{{ .Release.Namespace }}
        vault.security.banzaicloud.io/vault-role: {{ .Release.Namespace }}-{{ .Values.envname }}-role
    {{- end }}
    {{- if .Values.hpa }}
        {{- if .Values.hpa.cpuAverageUtilizationPercentage}}
        cpu.hpa.autoscaling.banzaicloud.io/targetAverageUtilization: "{{ .Values.hpa.cpuAverageUtilizationPercentage }}"
        {{- end }}
        {{- if .Values.hpa.memAverageUtilizationPercentage}}
        memory.hpa.autoscaling.banzaicloud.io/targetAverageUtilization: "{{ .Values.hpa.memAverageUtilizationPercentage }}"
        {{- end }}
        {{- if .Values.hpa.minReplicas }}
        hpa.autoscaling.banzaicloud.io/minReplicas: "{{ .Values.hpa.minReplicas}}"
        {{- else }}
        hpa.autoscaling.banzaicloud.io/minReplicas: "{{ .Values.replicas }}"
        {{- end }}
        hpa.autoscaling.banzaicloud.io/maxReplicas: "{{ .Values.hpa.maxReplicas | default  5 }}"
    {{- end }}
    spec:
      {{- if .Values.securityContext }}
      securityContext:
        {{- .Values.securityContext | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
        {{- if .Values.imagename }}
          image: "{{ .Values.imagename }}"
        {{- else }}
          image: "{{ .Values.repository }}:{{ .Values.tag }}"
        {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy | default "Always"}}
          {{- if .Values.resources }}
          resources:
            {{- .Values.resources | toYaml | trim | nindent 12 }}
          {{- end }}
          ports:
          {{- range $key, $value := .Values.ports }}
            - name: {{ $key }}
              containerPort: {{ $value.internalPort }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- .Values.readinessProbe | toYaml | trim | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- .Values.livenessProbe | toYaml | trim | nindent 12 }}
          {{- end }}
          {{- if or .Values.secrets.env .Values.env }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
            {{- if eq (kindOf $value) "map" }}
              {{- $value | toYaml | trim | nindent 14 }}
            {{- else }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if or .Values.secrets }}
          {{- range $key, $value := .Values.secrets }}
            # a secret
            - name: {{ $key }}
            {{- if eq (kindOf $value) "map" }}
              {{ .Values.envname }}/{{ .Release.Namespace }}{{- $value | toYaml | trim | nindent 14 }}
            {{- else }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}

{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}